package com.colsevi.dao.proveedor.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CompraExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table compra
     *
     * @mbggenerated Thu Mar 10 16:26:02 COT 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table compra
     *
     * @mbggenerated Thu Mar 10 16:26:02 COT 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table compra
     *
     * @mbggenerated Thu Mar 10 16:26:02 COT 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table compra
     *
     * @mbggenerated Thu Mar 10 16:26:02 COT 2016
     */
    public CompraExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table compra
     *
     * @mbggenerated Thu Mar 10 16:26:02 COT 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table compra
     *
     * @mbggenerated Thu Mar 10 16:26:02 COT 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table compra
     *
     * @mbggenerated Thu Mar 10 16:26:02 COT 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table compra
     *
     * @mbggenerated Thu Mar 10 16:26:02 COT 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table compra
     *
     * @mbggenerated Thu Mar 10 16:26:02 COT 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table compra
     *
     * @mbggenerated Thu Mar 10 16:26:02 COT 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table compra
     *
     * @mbggenerated Thu Mar 10 16:26:02 COT 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table compra
     *
     * @mbggenerated Thu Mar 10 16:26:02 COT 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table compra
     *
     * @mbggenerated Thu Mar 10 16:26:02 COT 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table compra
     *
     * @mbggenerated Thu Mar 10 16:26:02 COT 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table compra
     *
     * @mbggenerated Thu Mar 10 16:26:02 COT 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andId_compraIsNull() {
            addCriterion("id_compra is null");
            return (Criteria) this;
        }

        public Criteria andId_compraIsNotNull() {
            addCriterion("id_compra is not null");
            return (Criteria) this;
        }

        public Criteria andId_compraEqualTo(Integer value) {
            addCriterion("id_compra =", value, "id_compra");
            return (Criteria) this;
        }

        public Criteria andId_compraNotEqualTo(Integer value) {
            addCriterion("id_compra <>", value, "id_compra");
            return (Criteria) this;
        }

        public Criteria andId_compraGreaterThan(Integer value) {
            addCriterion("id_compra >", value, "id_compra");
            return (Criteria) this;
        }

        public Criteria andId_compraGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_compra >=", value, "id_compra");
            return (Criteria) this;
        }

        public Criteria andId_compraLessThan(Integer value) {
            addCriterion("id_compra <", value, "id_compra");
            return (Criteria) this;
        }

        public Criteria andId_compraLessThanOrEqualTo(Integer value) {
            addCriterion("id_compra <=", value, "id_compra");
            return (Criteria) this;
        }

        public Criteria andId_compraIn(List<Integer> values) {
            addCriterion("id_compra in", values, "id_compra");
            return (Criteria) this;
        }

        public Criteria andId_compraNotIn(List<Integer> values) {
            addCriterion("id_compra not in", values, "id_compra");
            return (Criteria) this;
        }

        public Criteria andId_compraBetween(Integer value1, Integer value2) {
            addCriterion("id_compra between", value1, value2, "id_compra");
            return (Criteria) this;
        }

        public Criteria andId_compraNotBetween(Integer value1, Integer value2) {
            addCriterion("id_compra not between", value1, value2, "id_compra");
            return (Criteria) this;
        }

        public Criteria andId_proveedorIsNull() {
            addCriterion("id_proveedor is null");
            return (Criteria) this;
        }

        public Criteria andId_proveedorIsNotNull() {
            addCriterion("id_proveedor is not null");
            return (Criteria) this;
        }

        public Criteria andId_proveedorEqualTo(Integer value) {
            addCriterion("id_proveedor =", value, "id_proveedor");
            return (Criteria) this;
        }

        public Criteria andId_proveedorNotEqualTo(Integer value) {
            addCriterion("id_proveedor <>", value, "id_proveedor");
            return (Criteria) this;
        }

        public Criteria andId_proveedorGreaterThan(Integer value) {
            addCriterion("id_proveedor >", value, "id_proveedor");
            return (Criteria) this;
        }

        public Criteria andId_proveedorGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_proveedor >=", value, "id_proveedor");
            return (Criteria) this;
        }

        public Criteria andId_proveedorLessThan(Integer value) {
            addCriterion("id_proveedor <", value, "id_proveedor");
            return (Criteria) this;
        }

        public Criteria andId_proveedorLessThanOrEqualTo(Integer value) {
            addCriterion("id_proveedor <=", value, "id_proveedor");
            return (Criteria) this;
        }

        public Criteria andId_proveedorIn(List<Integer> values) {
            addCriterion("id_proveedor in", values, "id_proveedor");
            return (Criteria) this;
        }

        public Criteria andId_proveedorNotIn(List<Integer> values) {
            addCriterion("id_proveedor not in", values, "id_proveedor");
            return (Criteria) this;
        }

        public Criteria andId_proveedorBetween(Integer value1, Integer value2) {
            addCriterion("id_proveedor between", value1, value2, "id_proveedor");
            return (Criteria) this;
        }

        public Criteria andId_proveedorNotBetween(Integer value1, Integer value2) {
            addCriterion("id_proveedor not between", value1, value2, "id_proveedor");
            return (Criteria) this;
        }

        public Criteria andValorIsNull() {
            addCriterion("valor is null");
            return (Criteria) this;
        }

        public Criteria andValorIsNotNull() {
            addCriterion("valor is not null");
            return (Criteria) this;
        }

        public Criteria andValorEqualTo(BigDecimal value) {
            addCriterion("valor =", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorNotEqualTo(BigDecimal value) {
            addCriterion("valor <>", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorGreaterThan(BigDecimal value) {
            addCriterion("valor >", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("valor >=", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorLessThan(BigDecimal value) {
            addCriterion("valor <", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorLessThanOrEqualTo(BigDecimal value) {
            addCriterion("valor <=", value, "valor");
            return (Criteria) this;
        }

        public Criteria andValorIn(List<BigDecimal> values) {
            addCriterion("valor in", values, "valor");
            return (Criteria) this;
        }

        public Criteria andValorNotIn(List<BigDecimal> values) {
            addCriterion("valor not in", values, "valor");
            return (Criteria) this;
        }

        public Criteria andValorBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("valor between", value1, value2, "valor");
            return (Criteria) this;
        }

        public Criteria andValorNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("valor not between", value1, value2, "valor");
            return (Criteria) this;
        }

        public Criteria andFecha_compraIsNull() {
            addCriterion("fecha_compra is null");
            return (Criteria) this;
        }

        public Criteria andFecha_compraIsNotNull() {
            addCriterion("fecha_compra is not null");
            return (Criteria) this;
        }

        public Criteria andFecha_compraEqualTo(Date value) {
            addCriterion("fecha_compra =", value, "fecha_compra");
            return (Criteria) this;
        }

        public Criteria andFecha_compraNotEqualTo(Date value) {
            addCriterion("fecha_compra <>", value, "fecha_compra");
            return (Criteria) this;
        }

        public Criteria andFecha_compraGreaterThan(Date value) {
            addCriterion("fecha_compra >", value, "fecha_compra");
            return (Criteria) this;
        }

        public Criteria andFecha_compraGreaterThanOrEqualTo(Date value) {
            addCriterion("fecha_compra >=", value, "fecha_compra");
            return (Criteria) this;
        }

        public Criteria andFecha_compraLessThan(Date value) {
            addCriterion("fecha_compra <", value, "fecha_compra");
            return (Criteria) this;
        }

        public Criteria andFecha_compraLessThanOrEqualTo(Date value) {
            addCriterion("fecha_compra <=", value, "fecha_compra");
            return (Criteria) this;
        }

        public Criteria andFecha_compraIn(List<Date> values) {
            addCriterion("fecha_compra in", values, "fecha_compra");
            return (Criteria) this;
        }

        public Criteria andFecha_compraNotIn(List<Date> values) {
            addCriterion("fecha_compra not in", values, "fecha_compra");
            return (Criteria) this;
        }

        public Criteria andFecha_compraBetween(Date value1, Date value2) {
            addCriterion("fecha_compra between", value1, value2, "fecha_compra");
            return (Criteria) this;
        }

        public Criteria andFecha_compraNotBetween(Date value1, Date value2) {
            addCriterion("fecha_compra not between", value1, value2, "fecha_compra");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table compra
     *
     * @mbggenerated do_not_delete_during_merge Thu Mar 10 16:26:02 COT 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table compra
     *
     * @mbggenerated Thu Mar 10 16:26:02 COT 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}