<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.colsevi.dao.inventario.map.InventarioMapper" >
  <resultMap id="BaseResultMap" type="com.colsevi.dao.inventario.model.Inventario" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 12 16:32:27 COT 2016.
    -->
    <id column="id_inventario" property="id_inventario" jdbcType="INTEGER" />
    <result column="id_establecimiento" property="id_establecimiento" jdbcType="INTEGER" />
    <result column="id_producto" property="id_producto" jdbcType="INTEGER" />
    <result column="disponible" property="disponible" jdbcType="INTEGER" />
    <result column="compromiso" property="compromiso" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 12 16:32:27 COT 2016.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 12 16:32:27 COT 2016.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 12 16:32:27 COT 2016.
    -->
    id_inventario, id_establecimiento, id_producto, disponible, compromiso
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.colsevi.dao.inventario.model.InventarioExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 12 16:32:27 COT 2016.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from inventario
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 12 16:32:27 COT 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from inventario
    where id_inventario = #{id_inventario,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 12 16:32:27 COT 2016.
    -->
    delete from inventario
    where id_inventario = #{id_inventario,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.colsevi.dao.inventario.model.InventarioExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 12 16:32:27 COT 2016.
    -->
    delete from inventario
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.colsevi.dao.inventario.model.Inventario" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 12 16:32:27 COT 2016.
    -->
    insert into inventario (id_inventario, id_establecimiento, 
      id_producto, disponible, compromiso
      )
    values (#{id_inventario,jdbcType=INTEGER}, #{id_establecimiento,jdbcType=INTEGER}, 
      #{id_producto,jdbcType=INTEGER}, #{disponible,jdbcType=INTEGER}, #{compromiso,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.colsevi.dao.inventario.model.Inventario" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 12 16:32:27 COT 2016.
    -->
    insert into inventario
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id_inventario != null" >
        id_inventario,
      </if>
      <if test="id_establecimiento != null" >
        id_establecimiento,
      </if>
      <if test="id_producto != null" >
        id_producto,
      </if>
      <if test="disponible != null" >
        disponible,
      </if>
      <if test="compromiso != null" >
        compromiso,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id_inventario != null" >
        #{id_inventario,jdbcType=INTEGER},
      </if>
      <if test="id_establecimiento != null" >
        #{id_establecimiento,jdbcType=INTEGER},
      </if>
      <if test="id_producto != null" >
        #{id_producto,jdbcType=INTEGER},
      </if>
      <if test="disponible != null" >
        #{disponible,jdbcType=INTEGER},
      </if>
      <if test="compromiso != null" >
        #{compromiso,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.colsevi.dao.inventario.model.InventarioExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 12 16:32:27 COT 2016.
    -->
    select count(*) from inventario
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 12 16:32:27 COT 2016.
    -->
    update inventario
    <set >
      <if test="record.id_inventario != null" >
        id_inventario = #{record.id_inventario,jdbcType=INTEGER},
      </if>
      <if test="record.id_establecimiento != null" >
        id_establecimiento = #{record.id_establecimiento,jdbcType=INTEGER},
      </if>
      <if test="record.id_producto != null" >
        id_producto = #{record.id_producto,jdbcType=INTEGER},
      </if>
      <if test="record.disponible != null" >
        disponible = #{record.disponible,jdbcType=INTEGER},
      </if>
      <if test="record.compromiso != null" >
        compromiso = #{record.compromiso,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 12 16:32:27 COT 2016.
    -->
    update inventario
    set id_inventario = #{record.id_inventario,jdbcType=INTEGER},
      id_establecimiento = #{record.id_establecimiento,jdbcType=INTEGER},
      id_producto = #{record.id_producto,jdbcType=INTEGER},
      disponible = #{record.disponible,jdbcType=INTEGER},
      compromiso = #{record.compromiso,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.colsevi.dao.inventario.model.Inventario" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 12 16:32:27 COT 2016.
    -->
    update inventario
    <set >
      <if test="id_establecimiento != null" >
        id_establecimiento = #{id_establecimiento,jdbcType=INTEGER},
      </if>
      <if test="id_producto != null" >
        id_producto = #{id_producto,jdbcType=INTEGER},
      </if>
      <if test="disponible != null" >
        disponible = #{disponible,jdbcType=INTEGER},
      </if>
      <if test="compromiso != null" >
        compromiso = #{compromiso,jdbcType=INTEGER},
      </if>
    </set>
    where id_inventario = #{id_inventario,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.colsevi.dao.inventario.model.Inventario" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 12 16:32:27 COT 2016.
    -->
    update inventario
    set id_establecimiento = #{id_establecimiento,jdbcType=INTEGER},
      id_producto = #{id_producto,jdbcType=INTEGER},
      disponible = #{disponible,jdbcType=INTEGER},
      compromiso = #{compromiso,jdbcType=INTEGER}
    where id_inventario = #{id_inventario,jdbcType=INTEGER}
  </update>
  
  <select id="SelectDataView" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT inv.id_inventario, prod.id_producto, prod.nombre AS nombreProd, prod.referencia, inv.id_establecimiento,
			esta.nombre AS nombreEsta, inv.disponible, inv.compromiso
		FROM producto prod
		LEFT JOIN inventario inv on inv.id_producto = prod.id_producto
		LEFT JOIN catalogo_x_producto cxp ON cxp.id_producto = prod.id_producto
		LEFT JOIN catalogo cat ON cat.id_catalogo = cxp.id_catalogo
		LEFT JOIN establecimiento esta ON esta.id_establecimiento = inv.id_establecimiento
		WHERE 1 = 1
		 <if test="prodV != null">
			AND prod.id_producto = #{prodV}
		 </if>
		 <if test="estaF != null">
			AND inv.id_establecimiento = #{estaF}
		 </if>
		 <if test="dis != null">
			OR inv.disponible ${dis}
		 </if>
		ORDER BY inv.id_inventario DESC
		LIMIT ${limit};
	</select>
	<select id="CountDataView" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM producto prod
		LEFT JOIN inventario inv on inv.id_producto = prod.id_producto
		LEFT JOIN catalogo_x_producto cxp ON cxp.id_producto = prod.id_producto
		LEFT JOIN catalogo cat ON cat.id_catalogo = cxp.id_catalogo
		LEFT JOIN establecimiento esta ON esta.id_establecimiento = inv.id_establecimiento
		WHERE 1 = 1
		 <if test="prodV != null">
			AND prod.id_producto = #{prodV}
		 </if>
		 <if test="estaF != null">
			AND inv.id_establecimiento = #{estaF}
		 </if>
		 <if test="dis != null">
			OR inv.disponible ${dis}
		 </if>
		 ;
	</select>
	
	<select id="CargarInv" parameterType="java.util.Map" resultType="java.util.HashMap">
		
		SELECT mp.lote, mp.cantidad, mp.fecha_vencimiento, up.nombre,up.id_unidad_peso AS um, up.codigo AS codUM, ing.id_ingrediente,
			ixm.cantidad AS cantAsig, ixm.id_unidad_peso As umAsig
		FROM ingrediente ing
		LEFT JOIN materia_prima mp ON mp.id_ingrediente = ing.id_ingrediente
		LEFT JOIN unidad_peso up ON up.id_unidad_peso = mp.id_unidad_peso
	    LEFT JOIN  inventario_x_materia ixm ON mp.id_ingrediente = ing.id_ingrediente
		WHERE 1 = 1
    
		AND (fecha_vencimiento is null OR fecha_vencimiento > NOW()) 
		AND mp.cantidad > 0
		
 		<if test="ing != null">
			AND ing.id_ingrediente = 1
		 </if>
		 <if test="esta != null">
			 AND mp.id_establecimiento = 1
		  </if>
		  
		GROUP BY ing.id_ingrediente, mp.lote
		ORDER BY ing.id_ingrediente DESC;
		
	</select>
	
	<select id="CargarIngProd" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT ixp.id_ingrediente, ixp.cantidad AS cantidadProd, up.nombre As nombreIngU, ing.nombre as nombreIng,
			up.id_unidad_peso, up.codigo AS codUM, ixm.cantidad AS cantAsig, ixm.id_unidad_peso As umAsig
		FROM producto prod
		LEFT JOIN ingrediente_x_producto ixp ON ixp.id_producto = prod.id_producto
		LEFT JOIN unidad_peso up ON up.id_unidad_peso = ixp.id_unidad_peso
		LEFT JOIN ingrediente ing ON ing.id_ingrediente = ixp.id_ingrediente
        LEFT JOIN inventario_x_materia ixm ON ixm.id_ingrediente = ing.id_ingrediente
		WHERE prod.id_producto = #{producto}
		GROUP BY ixp.id_ingrediente; 
	</select>   
</mapper>