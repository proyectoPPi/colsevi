package com.colsevi.dao.general.model;

import java.util.ArrayList;
import java.util.List;

public class DireccionExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table direccion
	 * @mbggenerated  Tue Apr 12 16:26:48 COT 2016
	 */
	protected String orderByClause;
	protected String limit;
	
	public String getLimit() {
		return limit;
	}

	public void setLimit(String limit) {
		this.limit = limit;
	}

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table direccion
	 * @mbggenerated  Tue Apr 12 16:26:48 COT 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table direccion
	 * @mbggenerated  Tue Apr 12 16:26:48 COT 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table direccion
	 * @mbggenerated  Tue Apr 12 16:26:48 COT 2016
	 */
	public DireccionExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table direccion
	 * @mbggenerated  Tue Apr 12 16:26:48 COT 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table direccion
	 * @mbggenerated  Tue Apr 12 16:26:48 COT 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table direccion
	 * @mbggenerated  Tue Apr 12 16:26:48 COT 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table direccion
	 * @mbggenerated  Tue Apr 12 16:26:48 COT 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table direccion
	 * @mbggenerated  Tue Apr 12 16:26:48 COT 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table direccion
	 * @mbggenerated  Tue Apr 12 16:26:48 COT 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table direccion
	 * @mbggenerated  Tue Apr 12 16:26:48 COT 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table direccion
	 * @mbggenerated  Tue Apr 12 16:26:48 COT 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table direccion
	 * @mbggenerated  Tue Apr 12 16:26:48 COT 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table direccion
	 * @mbggenerated  Tue Apr 12 16:26:48 COT 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table direccion
	 * @mbggenerated  Tue Apr 12 16:26:48 COT 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andId_direccionIsNull() {
			addCriterion("id_direccion is null");
			return (Criteria) this;
		}

		public Criteria andId_direccionIsNotNull() {
			addCriterion("id_direccion is not null");
			return (Criteria) this;
		}

		public Criteria andId_direccionEqualTo(Integer value) {
			addCriterion("id_direccion =", value, "id_direccion");
			return (Criteria) this;
		}

		public Criteria andId_direccionNotEqualTo(Integer value) {
			addCriterion("id_direccion <>", value, "id_direccion");
			return (Criteria) this;
		}

		public Criteria andId_direccionGreaterThan(Integer value) {
			addCriterion("id_direccion >", value, "id_direccion");
			return (Criteria) this;
		}

		public Criteria andId_direccionGreaterThanOrEqualTo(Integer value) {
			addCriterion("id_direccion >=", value, "id_direccion");
			return (Criteria) this;
		}

		public Criteria andId_direccionLessThan(Integer value) {
			addCriterion("id_direccion <", value, "id_direccion");
			return (Criteria) this;
		}

		public Criteria andId_direccionLessThanOrEqualTo(Integer value) {
			addCriterion("id_direccion <=", value, "id_direccion");
			return (Criteria) this;
		}

		public Criteria andId_direccionIn(List<Integer> values) {
			addCriterion("id_direccion in", values, "id_direccion");
			return (Criteria) this;
		}

		public Criteria andId_direccionNotIn(List<Integer> values) {
			addCriterion("id_direccion not in", values, "id_direccion");
			return (Criteria) this;
		}

		public Criteria andId_direccionBetween(Integer value1, Integer value2) {
			addCriterion("id_direccion between", value1, value2, "id_direccion");
			return (Criteria) this;
		}

		public Criteria andId_direccionNotBetween(Integer value1, Integer value2) {
			addCriterion("id_direccion not between", value1, value2,
					"id_direccion");
			return (Criteria) this;
		}

		public Criteria andId_personaIsNull() {
			addCriterion("id_persona is null");
			return (Criteria) this;
		}

		public Criteria andId_personaIsNotNull() {
			addCriterion("id_persona is not null");
			return (Criteria) this;
		}

		public Criteria andId_personaEqualTo(Integer value) {
			addCriterion("id_persona =", value, "id_persona");
			return (Criteria) this;
		}

		public Criteria andId_personaNotEqualTo(Integer value) {
			addCriterion("id_persona <>", value, "id_persona");
			return (Criteria) this;
		}

		public Criteria andId_personaGreaterThan(Integer value) {
			addCriterion("id_persona >", value, "id_persona");
			return (Criteria) this;
		}

		public Criteria andId_personaGreaterThanOrEqualTo(Integer value) {
			addCriterion("id_persona >=", value, "id_persona");
			return (Criteria) this;
		}

		public Criteria andId_personaLessThan(Integer value) {
			addCriterion("id_persona <", value, "id_persona");
			return (Criteria) this;
		}

		public Criteria andId_personaLessThanOrEqualTo(Integer value) {
			addCriterion("id_persona <=", value, "id_persona");
			return (Criteria) this;
		}

		public Criteria andId_personaIn(List<Integer> values) {
			addCriterion("id_persona in", values, "id_persona");
			return (Criteria) this;
		}

		public Criteria andId_personaNotIn(List<Integer> values) {
			addCriterion("id_persona not in", values, "id_persona");
			return (Criteria) this;
		}

		public Criteria andId_personaBetween(Integer value1, Integer value2) {
			addCriterion("id_persona between", value1, value2, "id_persona");
			return (Criteria) this;
		}

		public Criteria andId_personaNotBetween(Integer value1, Integer value2) {
			addCriterion("id_persona not between", value1, value2, "id_persona");
			return (Criteria) this;
		}

		public Criteria andDireccionIsNull() {
			addCriterion("direccion is null");
			return (Criteria) this;
		}

		public Criteria andDireccionIsNotNull() {
			addCriterion("direccion is not null");
			return (Criteria) this;
		}

		public Criteria andDireccionEqualTo(String value) {
			addCriterion("direccion =", value, "direccion");
			return (Criteria) this;
		}

		public Criteria andDireccionNotEqualTo(String value) {
			addCriterion("direccion <>", value, "direccion");
			return (Criteria) this;
		}

		public Criteria andDireccionGreaterThan(String value) {
			addCriterion("direccion >", value, "direccion");
			return (Criteria) this;
		}

		public Criteria andDireccionGreaterThanOrEqualTo(String value) {
			addCriterion("direccion >=", value, "direccion");
			return (Criteria) this;
		}

		public Criteria andDireccionLessThan(String value) {
			addCriterion("direccion <", value, "direccion");
			return (Criteria) this;
		}

		public Criteria andDireccionLessThanOrEqualTo(String value) {
			addCriterion("direccion <=", value, "direccion");
			return (Criteria) this;
		}

		public Criteria andDireccionLike(String value) {
			addCriterion("direccion like", value, "direccion");
			return (Criteria) this;
		}

		public Criteria andDireccionNotLike(String value) {
			addCriterion("direccion not like", value, "direccion");
			return (Criteria) this;
		}

		public Criteria andDireccionIn(List<String> values) {
			addCriterion("direccion in", values, "direccion");
			return (Criteria) this;
		}

		public Criteria andDireccionNotIn(List<String> values) {
			addCriterion("direccion not in", values, "direccion");
			return (Criteria) this;
		}

		public Criteria andDireccionBetween(String value1, String value2) {
			addCriterion("direccion between", value1, value2, "direccion");
			return (Criteria) this;
		}

		public Criteria andDireccionNotBetween(String value1, String value2) {
			addCriterion("direccion not between", value1, value2, "direccion");
			return (Criteria) this;
		}

		public Criteria andBarrioIsNull() {
			addCriterion("barrio is null");
			return (Criteria) this;
		}

		public Criteria andBarrioIsNotNull() {
			addCriterion("barrio is not null");
			return (Criteria) this;
		}

		public Criteria andBarrioEqualTo(String value) {
			addCriterion("barrio =", value, "barrio");
			return (Criteria) this;
		}

		public Criteria andBarrioNotEqualTo(String value) {
			addCriterion("barrio <>", value, "barrio");
			return (Criteria) this;
		}

		public Criteria andBarrioGreaterThan(String value) {
			addCriterion("barrio >", value, "barrio");
			return (Criteria) this;
		}

		public Criteria andBarrioGreaterThanOrEqualTo(String value) {
			addCriterion("barrio >=", value, "barrio");
			return (Criteria) this;
		}

		public Criteria andBarrioLessThan(String value) {
			addCriterion("barrio <", value, "barrio");
			return (Criteria) this;
		}

		public Criteria andBarrioLessThanOrEqualTo(String value) {
			addCriterion("barrio <=", value, "barrio");
			return (Criteria) this;
		}

		public Criteria andBarrioLike(String value) {
			addCriterion("barrio like", value, "barrio");
			return (Criteria) this;
		}

		public Criteria andBarrioNotLike(String value) {
			addCriterion("barrio not like", value, "barrio");
			return (Criteria) this;
		}

		public Criteria andBarrioIn(List<String> values) {
			addCriterion("barrio in", values, "barrio");
			return (Criteria) this;
		}

		public Criteria andBarrioNotIn(List<String> values) {
			addCriterion("barrio not in", values, "barrio");
			return (Criteria) this;
		}

		public Criteria andBarrioBetween(String value1, String value2) {
			addCriterion("barrio between", value1, value2, "barrio");
			return (Criteria) this;
		}

		public Criteria andBarrioNotBetween(String value1, String value2) {
			addCriterion("barrio not between", value1, value2, "barrio");
			return (Criteria) this;
		}

		public Criteria andDescripcionIsNull() {
			addCriterion("descripcion is null");
			return (Criteria) this;
		}

		public Criteria andDescripcionIsNotNull() {
			addCriterion("descripcion is not null");
			return (Criteria) this;
		}

		public Criteria andDescripcionEqualTo(String value) {
			addCriterion("descripcion =", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionNotEqualTo(String value) {
			addCriterion("descripcion <>", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionGreaterThan(String value) {
			addCriterion("descripcion >", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionGreaterThanOrEqualTo(String value) {
			addCriterion("descripcion >=", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionLessThan(String value) {
			addCriterion("descripcion <", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionLessThanOrEqualTo(String value) {
			addCriterion("descripcion <=", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionLike(String value) {
			addCriterion("descripcion like", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionNotLike(String value) {
			addCriterion("descripcion not like", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionIn(List<String> values) {
			addCriterion("descripcion in", values, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionNotIn(List<String> values) {
			addCriterion("descripcion not in", values, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionBetween(String value1, String value2) {
			addCriterion("descripcion between", value1, value2, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionNotBetween(String value1, String value2) {
			addCriterion("descripcion not between", value1, value2,
					"descripcion");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table direccion
	 * @mbggenerated  Tue Apr 12 16:26:48 COT 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table direccion
     *
     * @mbggenerated do_not_delete_during_merge Tue Mar 01 15:02:09 COT 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}